apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "archon.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "archon.labels" . | nindent 4 }}
data:
  # Core configuration
  DEPLOYMENT_MODE: {{ .Values.config.deploymentMode | quote }}
  SERVICE_DISCOVERY_MODE: {{ .Values.config.serviceDiscoveryMode | quote }}
  LOG_LEVEL: {{ .Values.config.logLevel | quote }}
  
  # Service ports
  ARCHON_SERVER_PORT: {{ .Values.service.server.port | quote }}
  ARCHON_MCP_PORT: {{ .Values.service.mcp.port | quote }}
  ARCHON_AGENTS_PORT: {{ .Values.service.agents.port | quote }}
  ARCHON_UI_PORT: {{ .Values.service.ui.port | quote }}
  {{- if .Values.config.sidecar.enabled }}
  MCP_SIDECAR_PORT: {{ .Values.config.sidecar.port | quote }}
  {{- end }}
  
  # Service hosts (using localhost - unified pod)
  ARCHON_SERVER_HOST: localhost
  ARCHON_MCP_HOST: localhost
  ARCHON_AGENTS_HOST: localhost
  ARCHON_UI_HOST: 0.0.0.0
  
  # Vite configuration for ingress compatibility
  VITE_ALLOWED_HOSTS: "localhost,{{ include "archon.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local{{- if .Values.ingress.enabled }}{{- range .Values.ingress.hosts }},{{ .host }}{{- end }}{{- end }}"
  
  # Kubernetes specific
  KUBERNETES_NAMESPACE: {{ .Release.Namespace | quote }}
  {{- if .Values.config.sidecar.enabled }}
  MCP_SIDECAR_URL: "http://localhost:{{ .Values.config.sidecar.port }}"
  {{- end }}
  
  # MCP Configuration
  TRANSPORT: {{ .Values.config.transport | quote }}
  
  # Crawler Configuration (if defined)
  {{- if .Values.config.crawling }}
  CRAWL_PAGE_TIMEOUT: {{ .Values.config.crawling.pageTimeout | quote }}
  CRAWL_WAIT_STRATEGY: {{ .Values.config.crawling.waitStrategy | quote }}
  CRAWL_DELAY_BEFORE_HTML: {{ .Values.config.crawling.delayBeforeHtml | quote }}
  {{- if .Values.config.crawling.maxRetries }}
  CRAWL_MAX_RETRIES: {{ .Values.config.crawling.maxRetries | quote }}
  {{- end }}
  {{- if .Values.config.crawling.retryDelay }}
  CRAWL_RETRY_DELAY: {{ .Values.config.crawling.retryDelay | quote }}
  {{- end }}
  {{- end }}
  
  # Service URLs for frontend API calls
  {{- if and .Values.ingress.enabled .Values.config.frontend.useIngressForApi }}
    {{- $ingressHost := (index .Values.ingress.hosts 0).host }}
    {{- $protocol := "https" }}
    {{- if not .Values.ingress.tls }}
      {{- $protocol = "http" }}
    {{- end }}
  API_SERVICE_URL: "{{ $protocol }}://{{ $ingressHost }}"
  AGENTS_SERVICE_URL: "{{ $protocol }}://{{ $ingressHost }}"
  {{- else if .Values.config.frontend.apiUrl }}
  API_SERVICE_URL: {{ .Values.config.frontend.apiUrl | quote }}
  AGENTS_SERVICE_URL: {{ .Values.config.frontend.apiUrl | quote }}
  {{- else }}
  API_SERVICE_URL: "http://localhost:{{ .Values.service.server.port }}"
  AGENTS_SERVICE_URL: "http://localhost:{{ .Values.service.agents.port }}"
  {{- end }}